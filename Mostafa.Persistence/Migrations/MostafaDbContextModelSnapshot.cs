// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mostafa.Persistence;

#nullable disable

namespace Mostafa.Persistence.Migrations
{
    [DbContext(typeof(MostafaDbContext))]
    partial class MostafaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mostafa.Domain.Entities.Factors.Factor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Factors");
                });

            modelBuilder.Entity("Mostafa.Domain.Entities.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Mostafa.Domain.Entities.Units.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Mostafa.Domain.Entities.Factors.Factor", b =>
                {
                    b.OwnsMany("Mostafa.Domain.Entities.Factors.FactorItem", "FactorItems", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("Discount")
                                .HasColumnType("int");

                            b1.Property<int>("FactorId")
                                .HasColumnType("int");

                            b1.Property<int>("ProductId")
                                .HasColumnType("int");

                            b1.Property<int>("Quantity")
                                .HasColumnType("int");

                            b1.Property<int>("Tax")
                                .HasColumnType("int");

                            b1.Property<int>("UnitId")
                                .HasColumnType("int");

                            b1.Property<int>("UnitPrice")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("FactorId");

                            b1.HasIndex("ProductId");

                            b1.HasIndex("UnitId");

                            b1.ToTable("FactorItems", (string)null);

                            b1.WithOwner("Factor")
                                .HasForeignKey("FactorId");

                            b1.HasOne("Mostafa.Domain.Entities.Products.Product", "Product")
                                .WithMany()
                                .HasForeignKey("ProductId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.HasOne("Mostafa.Domain.Entities.Units.Unit", "Unit")
                                .WithMany()
                                .HasForeignKey("UnitId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.Navigation("Factor");

                            b1.Navigation("Product");

                            b1.Navigation("Unit");
                        });

                    b.Navigation("FactorItems");
                });
#pragma warning restore 612, 618
        }
    }
}
